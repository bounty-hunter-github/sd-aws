shared:
  image: 551964337302.dkr.ecr.us-west-2.amazonaws.com/sd-hub:centos7
jobs:
  deployappsls:
    requires: [~pr, ~commit]
    annotations:
      screwdriver.cd/executor: "sls"
    environment:
      RESOURCE_REFIX: sd-aws-intg
      EXECUTOR: "CodeBuild"
    secrets:
      - PUBLIC_SUBNETS
      - SECURITY_GROUP_ID
    steps:
      - install-dep: |
          yum update -y
          yum install -y yum-utils 
          yum install -y zip unzip git curl gcc g++ make
          curl -sL https://rpm.nodesource.com/setup_12.x | bash -
          yum install -y nodejs npm
          yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
          yum install -y terraform
      - verify: |
          terraform version
          node -v
          npm -v
      - set-app-dir: cd lambda
      - install-app: npm install
      - pkg: zip -r build.zip .
      - copy: cp build.zip $SD_ARTIFACTS_DIR/
      - set-deploy-dir: cd ../deploy/
      - init: |
          echo "security_group_id=\"$SECURITY_GROUP_ID\"" > app.tfvars
          echo public_subnets=$PUBLIC_SUBNETS >> app.tfvars
          echo "resource_prefix=\"$RESOURCE_REFIX\"" >> app.tfvars
          echo "executor=\"$EXECUTOR\"" >> app.tfvars
          cat app.tfvars
          terraform init
      - plan: terraform plan -var-file=app.tfvars
      - deploy: terraform apply -auto-approve -var-file=app.tfvars
      # - installcli: |
      #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip -q awscliv2.zip
      #     sudo ./aws/install
      # - verify: |
      #     which aws
      #     ls -l /usr/local/bin/aws
      #     aws --version
  deployappeks:
    requires: [~pr, ~commit]
    annotations:
      screwdriver.cd/executor: "eks"
    environment:
      RESOURCE_REFIX: sd-eks-intg
      EXECUTOR: "Elastic Kubernetes Service"
    secrets:
      - PUBLIC_SUBNETS
      - SECURITY_GROUP_ID
    steps:
      - install-dep: |
          yum update -y
          yum install -y yum-utils 
          yum install -y zip unzip git curl gcc g++ make
          curl -sL https://rpm.nodesource.com/setup_12.x | bash -
          yum install -y nodejs npm
          yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
          yum install -y terraform
      - verify: |
          terraform version
          node -v
          npm -v
      - set-app-dir: cd lambda
      - install-app: npm install
      - pkg: zip -r build.zip .
      - copy: cp build.zip $SD_ARTIFACTS_DIR/
      - set-deploy-dir: cd ../deploy/
      - init: |
          echo "security_group_id=\"$SECURITY_GROUP_ID\"" > app.tfvars
          echo public_subnets=$PUBLIC_SUBNETS >> app.tfvars
          echo "resource_prefix=\"$RESOURCE_REFIX\"" >> app.tfvars
          echo "executor=\"$EXECUTOR\"" >> app.tfvars
          cat app.tfvars
          terraform init
      - plan: terraform plan -var-file=app.tfvars
      - deploy: terraform apply -auto-approve -var-file=app.tfvars

  imageBuilder:
    requires: [~pr, ~commit]
    annotations:
      screwdriver.cd/executor: "sls"
    steps:
      - install: |
          echo "Installing HashiCorp Packer..."
          yum install -y yum-utils curl zip unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install
          aws version
          curl -qL -o packer.zip https://releases.hashicorp.com/packer/0.12.3/packer_0.12.3_linux_amd64.zip && unzip packer.zip
          echo "Installing jq..."
          curl -qL -o jq https://stedolan.github.io/jq/download/linux64/jq && chmod +x ./jq
          echo "Validating amazon-linux_packer-template.json"
          ./packer validate amazon-linux_packer-template.json
      - build: |
          echo "Configuring AWS credentials"
          curl -qL -o aws_credentials.json http://169.254.170.2/$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI > aws_credentials.json
          aws configure set region $AWS_REGION
          aws configure set aws_access_key_id `./jq -r '.AccessKeyId' aws_credentials.json`
          aws configure set aws_secret_access_key `./jq -r '.SecretAccessKey' aws_credentials.json`
          aws configure set aws_session_token `./jq -r '.Token' aws_credentials.json`
          echo "Building HashiCorp Packer template, amazon-linux_packer-template.json"
          ./packer build amazon-linux_packer-template.json
      - post_build: echo "HashiCorp Packer build completed on `date`"
  dind:
    requires: [~pr, ~commit]
    annotations:
      screwdriver.cd/executor: "sls"
    image: 551964337302.dkr.ecr.us-west-2.amazonaws.com/sd-hub:ubuntu
    steps:
      - install: |
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get install docker-ce docker-ce-cli containerd.io
      - pre_build: |
          sudo systemctl start docker
          nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
          timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
      - build: |
          docker pull docker.ouroath.com:4443/ylinux/ylinux7
          docker images
